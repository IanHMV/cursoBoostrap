.row:
Cuando agregamos la clase "row" estamos diciendo que ese elemento html se va a convertir en una fila para boostrap, y va a cargar ciertas propiedades css que ya vienen predeterminadas en boostrap para una fila

Despues de especificar la fila, se tienen que especificar las columanas, eso se puede hacer de la siguiente manera:
 
 .col-: (Extra pequeño)
  Dimensiones:  < 576px (aplica cuando el dispositivo es menor a) (Esto representa el ancho de la  "Viewport")

 .col-sm-(numero de columnas) : (Pequeño)
  Dimensiones: > 576px

 .col-md-: (Mediano)
  Dimensiones: > 768px

 .col-lg-: (Grande)
  Dimensiones: > 992px

 .col-xl: (Extra Grande)
  Dimensiones: > 1200px

 .col-xxl: (Extra Extra Grande)
  Dimensiones: > 1400px

Estructura de la Grid:
Un contenedor puede contener filasy cada fila tiene 12 columnas

Que es un contenedor en Boostrap?:
Un contenedor es un elemento html que va a contener toda la estructura de filas y columnas
-Hay 2 clases especificas en boostrap para crear un contenedor:
+.container:
Crea un conenedor responsivo con un ancho maximo fijo que depende del tamano del dispositivo.
Es decir que si creamos un conedor su tamano maximo va a ser el ancho del dispositivo 
Diferencia? Este no se va a estirar para acaparar toda la ventana

+.container-fluid:
Crea un contenedor responsivo que cubre el 100% del ancho de la ventana

Hay contenedores responsivos que son:
.container-sm
.container-md
.container-lg
.container-xl
.container-xxl

Esto crea un contenedor responsivo que cubre el 100% de la ventana hasta que llega a las dimensiones de ese breakpoint
Esto significa que los contenedores, ANTES de llegar a su punto maximo, va a cubrir el 100% de la ventana. Luego de que llegue a ese punto va a convertirse en un contenedor con un ancho maximo, como si no fuera un container fluid.

Estructura de la Grid:
Los elementos de una fila pueden ocupar varias columnas.
Las columnas de los elementos de una fila deben sumar 12.
Si suman mas de 12, las columnas adicionales se colocan en una linea nueva.

Componente de boostrap:
Es un elemento de HTML reutilizable que ya viene con un estilo predeterminado y que podemos usar en nuetra pagina web.
Podemos personalizar el estilo de los componenetes de boostrap

Flexbox:
Permite que los elementos responsivos ubicados dentro de un contenedor se distribuyan automaticamente en base al tamaño del dispositivo
Importante:
Incluye clases para que podamos usar para trabajar con flexbox mas facilmente

Para crear un contenedor flexible utilizamos la clase:
d-flex

flex-direction:
Establece el eje princpal del contenedor, la direccion en la cual se van a colocar los elementos dentro del contenedor

flex-direction puede tener los siguientes valores:
-row (valor comun):
Los contenedores se alinearian de forma horizontal, en donde el eje principal seria el eje horizontal y el secundario seria el eje vertical
-row-reverse:
-column (valor comun):
Los elementos se alinearian de forma vertical, en donde el eje principal seria el eje vertical y el eje secundario seria el horizontal
-column-reverse:

Una vez visto estas propiedades, tenemos otra que es:

justifi-content:
Define como se distribuyen los elementos en el eje principal.

Y esta tiene varias propiedades:
-flex-start:
-flex-end:
-center:
-space-between:
-space-around:
-space-evenly:

En boostrap lo podemos trabajar mas facil con las siguientes CLASES:
-justifi-content-start
-justifi-content-end
-justifi-content-center
-justifi-content-between
-justifi-content-around
-justifi-content-evenly

align-items:
Define como se distribuyen los elementos en el eje perpendicular(osea el eje contrario) al eje principal

Y este tiene varias propiedades:
-flex-start:
-flex-end:
-center:
-baseline:
-stratch(estirar):

En boostrap lo podemos trabajar mas facil con las siguientes CLASES:
-align-items-start
-align-items-end
-align-items-center
-align-items-baseline
-align-items-stretch

flex-wrap:
Determina si los elementos deben ser ajustados para que siempre esten un una misma linea o si se les permite ditribuirse en varias lineas si es necesario:

tiene varias propiedades:
-nowrap (valor por defecto):
-wrap:
-wrap-reverse:

En boostrap lo podemos trabajar mas facil con las siguientes CLASES:
-flex-nowrap (valor por defecto):
-flex-wrap:
-flex-wrap-reverse:
